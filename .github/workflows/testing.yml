name: Testing

on: pull_request

jobs:

  unit: #-----------------------------------------------------------------------
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Check existence of composer.json file
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "composer.json, phpunit.xml.dist"

      - name: Set up PHP envirnoment
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: cs2pr

      - name: Get Composer cache Directory
        if: steps.check_files.outputs.files_exists == 'true'
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Use Composer cache
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/cache@master
        with:
          path: ${{ steps['composer-cache'].outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        if: steps.check_files.outputs.files_exists == 'true'
        run: COMPOSER_ROOT_VERSION=dev-master composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHPUnit
        run: composer phpunit

  functional: #----------------------------------------------------------------------
    name: Run functional tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Check existence of composer.json & phpcs.xml.dist files
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "composer.json, behat.yml"

      - name: Set up customized database server
        uses: mirromutth/mysql-action@v1.1
        with:
          character set server: 'utf8mb4'
          collation server: 'utf8mb4_general_ci'
          mysql version: '8.0'

      - name: Install MySQL client
        run: sudo apt-get install -y mysql-client

      - name: Set up PHP envirnoment
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: cs2pr

      - name: Get Composer cache Directory
        if: steps.check_files.outputs.files_exists == 'true'
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Use Composer cache
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/cache@master
        with:
          path: ${{ steps['composer-cache'].outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        if: steps.check_files.outputs.files_exists == 'true'
        run: COMPOSER_ROOT_VERSION=dev-master composer install --prefer-dist --no-progress --no-suggest

      - name: Prepare test database
        run: composer prepare-tests

      - name: Run Behat
        run: composer behat
